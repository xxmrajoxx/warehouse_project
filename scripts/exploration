---exploratory data analysi (EDA)


---data set either a simension or measure;
---does it make sense to aggregate the data?

select * from gold.dim_products;

--basic understanding of the database
-- explore all objects in the database

select * from INFORMATION_SCHEMA.tables

-- explore all columns in the databse
select * from INFORMATION_SCHEMA.columns
where TABLE_NAME = 'dim_customers';

--explore all countries our customer come from. 

select distinct country from gold.dim_customers;

-- explore all categories "The major Divisions"
select distinct category,  subcategory, product_name from gold.dim_products
order by 1,2,3


--exploring dates first and last - date minensions min/max using the datediff
-- 4 years of sales
select 
min(order_date) as first_order_date,
max(order_date) as last_order_date,
datediff(year, min(order_date), Max(order_date)) as order_range_years,
datediff(MONTH, min(order_date), Max(order_date)) as order_range_years
from gold.fact_sales

--find the youngest and oldest boundries
select 
min(birthdate) as oldest_birthdate,
DATEDIFF(year, min(birthdate), getdate()) as oldest_age,
max(birthdate) as younesst_birthdate,
DATEDIFF(year, max(birthdate), getdate()) as oldest_age
from gold.dim_customers;

--date measures, measure exploration
--find the total sales
select
sum(sales_amount) as total_sales
from gold.fact_sales;

-- find how many items are sold
select 
sum(quantity) as total_quantity
from gold.fact_sales;

--find the average selling price
select
avg(price) as avg_sale_price
from gold.fact_sales;

-- find the total number of orders
select count(order_number) as total_orders from gold.fact_sales;
select count(distinct order_number) as total_orders from gold.fact_sales; -- removing duplicates by doing distinct, example order_number so51475 has 3 orders 
select * from gold.fact_sales;

--find the total number of products

select 
	p.product_name,
	sum(s.quantity) as total_number_of_products
from gold.fact_sales as s
left join gold.dim_products as p
on s.product_key = p.product_key
group by p.product_name;

select count(product_key) as total_products from gold.dim_products;


-- find the total number of customers
select count(customer_key) as total_customer from gold.dim_customers;


-- find the total number of customers that has place an order
select count(distinct customer_key) as total_customers from gold.fact_sales;

-------------------------Generate a report that shows all key metrics of the business-------------------------
-------------------------Doing a Union all joining the tables-------------------------------------------------
-------------------------you can use unions because the number of columns and the data type are the same------
-------------------------put all measures in a big table to review--------------------------------------------

select 'Total sales' as measure_name, sum(sales_amount) as measure_value from gold.fact_sales
UNION ALL 
select 'Total quantity' as measure_name, sum(quantity) as measure_value from gold.fact_sales
UNION ALL 
select 'Average price' as measure_name, avg(price) as measure_value from gold.fact_sales
UNION ALL 
select 'Total No. Orders' as measure_name, count(distinct order_number) from gold.fact_sales
UNION all
select 'Total No. Products' as measure_name, count(Product_name) from gold.dim_products
UNION all
select 'Total No. Customers' as measure_name, count(customer_key) from gold.dim_customers;

--------magnitude analysis comparing the measuire value by categries, help us understand imporance of difference categories
--Find total customers by countries

select 
	country,
	count(customer_key) as total_customers
from gold.dim_customers
group by country
ORDER BY TOTAL_CUSTOMERS DESC;

--find total customer by gender
select 
	gender,
	count(customer_key) as total_customers
from gold.dim_customers
group by gender
ORDER BY TOTAL_CUSTOMERS DESC;

--find total products by category
select 
	category,
	count(product_key) as total_products
from gold.dim_products
group by category
order by total_products desc;

--what is the average costs in each category?
select 
	category,
	avg(cost) as average_cost
from gold.dim_products
group by category
order by average_cost desc;

--what is the total revenue generated for each category?
select 
	p.category as category,
	SUM(s.sales_amount) as total_revenue
from gold.fact_sales as s
left join gold.dim_products as p
on s.product_key = p.product_key
group by p.category
order by total_revenue desc

--find total revenue is generated by each customer
select 
	c.customer_id,
	c.first_name,
	c.last_name,
	sum(s.sales_amount) as total_revenue
from gold.fact_sales as s 
left join gold.dim_customers as c
on s.customer_key = c.customer_key
group by c.customer_id, c.first_name, c.last_name
order by total_revenue desc;

--what is the distribution of sold items across countires?
select 
	c.country,
	sum(s.quantity) as total_sold_items
from gold.fact_sales as s 
left join gold.dim_customers as c
on s.customer_key = c.customer_key
group by c.country
order by total_sold_items desc;


-------------------Ranking---------------------
-- which 5 products generate the highest revenue?
select 
	p.product_name,
	sum(f.sales_amount) as total_revenue,
	--dense_rank() over(partition by p.product_name order by sum(f.sales_amount) desc) as 'rank'
from gold.fact_sales as f
left join gold.dim_products as p
on f.product_key = p.product_key
group by p.product_name
order by total_revenue desc;


select top 5
	p.product_name,
	sum(f.sales_amount) as total_revenue 
from gold.fact_sales as f
left join gold.dim_products as p
on f.product_key = p.product_key
group by p.product_name
order by total_revenue desc;

select * from 
(
select
	p.product_name,
	sum(f.sales_amount) as total_revenue,
	row_number() over(order by sum(f.sales_amount) desc) as rank_products
from gold.fact_sales as f
left join gold.dim_products as p
on f.product_key = p.product_key
group by p.product_name
) t 
where rank_products <= 5

-- what are the 5 worst performing products in terms of sales? 
select top 5
	p.product_name,
	sum(f.sales_amount) as total_revenue 
from gold.fact_sales as f
left join gold.dim_products as p
on f.product_key = p.product_key
group by p.product_name
order by total_revenue asc;
